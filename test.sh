#!/bin/bash
#######################################################################

# ---------------------------------------------------------------------
# Before we start...

# Check that we are in the correct directory
CURRDIR=$( pwd )
if [ ! -f "$CURRDIR/test.sh" ]
then
  echo "This test script has to be started in the directory where it is located."
  echo "Aborting."
  exit 1
fi


######################################################################
######################################################################
######################################################################
#                       F U N C T I O N S
######################################################################
######################################################################
######################################################################

printUsage()
{
  echo "test [ <mode> ]"
}

######################################################################

main()
{
  if [ "$MODE" = "INIT" ]
  then
    doInit || exit 1
  elif [ "$MODE" = "RUNTESTS" ]
  then
    doRunTests || exit 1
  fi
}

######################################################################

doInit()
{
  echo "=============================================================="
  echo "=============================================================="
  echo "Init"
  echo "=============================================================="
  echo "=============================================================="
  
  # ---
  
  echo ""
  echo "=============================================================="
  echo "Clean Up"
  echo "=============================================================="
  
  mvn clean
  if [ "$?" = "0" ]
  then
    echo "[ OK ]"
  else
    echo "[ NOT OK ]"
    return 1
  fi
  
  # ---
  
  echo ""
  echo "=============================================================="
  echo "Call Prepare Scripts"
  echo "=============================================================="
  
  doInitPrepareScripts
  if [ "$?" = "0" ]
  then
    echo "[ OK ]"
  else
    echo "[ NOT OK ]"
    return 1
  fi
}

######################################################################

doInitPrepareScripts()
{
  local statusAll=0

  for module in kmymoney-base \
                kmymoney-api \
                kmymoney-api-ext \
                kmymoney-tools
  do
    echo ""
    echo "=============================="
    echo "Module '$module'"
    echo "=============================="
  
    cd $module || return 1
    
    if [ -f "./test_prep.sh" ]
    then
      echo "Encoutered prep script"
      echo "Calling it: "
      ./test_prep.sh
      if [ "$?" = "0" ]
      then
        echo "[ OK ]"
      else
        echo "[ NOT OK ]"
        return 1
      fi
    else
      echo "No prep script"
    fi
    
    cd ..
  done

  return $statusAll
}


######################################################################

doRunTests()
{
  echo "=============================================================="
  echo "=============================================================="
  echo "Testing Packages"
  echo "=============================================================="
  echo "=============================================================="
  
  # Check if symlink in module "API Extensions" is there
  echo -n "Check for link: "
  readlink -s "kmymoney-api-ext/target/test-classes/test.xml" > /dev/null 2>&1
  if [ "$?" = "0" ]
  then
    echo "[ OK ]"
  else
    echo "[ NOT OK ]"
    echo "Please call this script with arg 'INIT' first"
    return 1
  fi
  
  # mvn test
  mvn surefire-report:report
}


######################################################################
######################################################################
######################################################################
#               C O M M A N D   L I N E   A R G S
######################################################################
######################################################################
######################################################################

if [ "$1" = "-h" ] ||
   [ "$1" = "--help" ]
then
  printUsage
  exit 0
fi

MODE=$1

if [ "$MODE" = "" ]
then
  MODE="RUNTESTS"
fi

if [ "$MODE" != "INIT" ] &&
   [ "$MODE" != "RUNTESTS" ]
then
  echo "Error: <mode> must be one of the following:"
  echo " - INIT"
  echo " - RUNTESTS"
  exit 1
fi


######################################################################
######################################################################
######################################################################
#                   C O N F I G U R A T I O N
######################################################################
######################################################################
######################################################################

# ::EMPTY


######################################################################
######################################################################
######################################################################
#                     M A I N   P R O G R A M
######################################################################
######################################################################
######################################################################

main
